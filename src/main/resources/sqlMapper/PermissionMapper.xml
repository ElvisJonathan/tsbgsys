<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tsbg.ecosys.mapper.PermissionMapper" >
  <resultMap id="BaseResultMap" type="com.tsbg.ecosys.model.Permission" >
    <id column="perm_id" property="permId" jdbcType="INTEGER" />
    <result column="available" property="available" jdbcType="BIT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="parent_id" property="parentId" jdbcType="BIGINT" />
    <result column="parent_ids" property="parentIds" jdbcType="VARCHAR" />
    <result column="permission" property="permission" jdbcType="VARCHAR" />
    <result column="resource_type" property="resourceType" jdbcType="CHAR" />
    <result column="uri" property="uri" jdbcType="VARCHAR" />
    <result column="proj_id" property="projId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    perm_id, available, name, parent_id, parent_ids, permission, resource_type, uri,
    proj_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from permission
    where perm_id = #{permId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from permission
    where perm_id = #{permId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.tsbg.ecosys.model.Permission" >
    insert into permission (perm_id, available, name,
      parent_id, parent_ids, permission,
      resource_type, uri, proj_id
      )
    values (#{permId,jdbcType=INTEGER}, #{available,jdbcType=BIT}, #{name,jdbcType=VARCHAR},
      #{parentId,jdbcType=BIGINT}, #{parentIds,jdbcType=VARCHAR}, #{permission,jdbcType=VARCHAR},
      #{resourceType,jdbcType=CHAR}, #{uri,jdbcType=VARCHAR}, #{projId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.tsbg.ecosys.model.Permission" >
    insert into permission
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="permId != null" >
        perm_id,
      </if>
      <if test="available != null" >
        available,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="parentId != null" >
        parent_id,
      </if>
      <if test="parentIds != null" >
        parent_ids,
      </if>
      <if test="permission != null" >
        permission,
      </if>
      <if test="resourceType != null" >
        resource_type,
      </if>
      <if test="uri != null" >
        uri,
      </if>
      <if test="projId != null" >
        proj_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="permId != null" >
        #{permId,jdbcType=INTEGER},
      </if>
      <if test="available != null" >
        #{available,jdbcType=BIT},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=BIGINT},
      </if>
      <if test="parentIds != null" >
        #{parentIds,jdbcType=VARCHAR},
      </if>
      <if test="permission != null" >
        #{permission,jdbcType=VARCHAR},
      </if>
      <if test="resourceType != null" >
        #{resourceType,jdbcType=CHAR},
      </if>
      <if test="uri != null" >
        #{uri,jdbcType=VARCHAR},
      </if>
      <if test="projId != null" >
        #{projId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.tsbg.ecosys.model.Permission" >
    update permission
    <set >
      <if test="available != null" >
        available = #{available,jdbcType=BIT},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=BIGINT},
      </if>
      <if test="parentIds != null" >
        parent_ids = #{parentIds,jdbcType=VARCHAR},
      </if>
      <if test="permission != null" >
        permission = #{permission,jdbcType=VARCHAR},
      </if>
      <if test="resourceType != null" >
        resource_type = #{resourceType,jdbcType=CHAR},
      </if>
      <if test="uri != null" >
        uri = #{uri,jdbcType=VARCHAR},
      </if>
      <if test="projId != null" >
        proj_id = #{projId,jdbcType=INTEGER},
      </if>
    </set>
    where perm_id = #{permId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tsbg.ecosys.model.Permission" >
    update permission
    set available = #{available,jdbcType=BIT},
      name = #{name,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=BIGINT},
      parent_ids = #{parentIds,jdbcType=VARCHAR},
      permission = #{permission,jdbcType=VARCHAR},
      resource_type = #{resourceType,jdbcType=CHAR},
      uri = #{uri,jdbcType=VARCHAR},
      proj_id = #{projId,jdbcType=INTEGER}
    where perm_id = #{permId,jdbcType=INTEGER}
  </update>
  <select id="selectPowerDetailByPid" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
   SELECT e.`perm_id`,e.`permission` FROM permission e WHERE e.`perm_id` IN
    <foreach item="pid" index="index" collection="list"   open="(" separator="," close=")">
    #{pid}
    </foreach>
    AND e.`perm_id`!=6
  </select>
  <select id="findPermissionByRoleId" resultType="com.tsbg.ecosys.model.Permission">
        SELECT
            role.roleid,
            role.available,
            role.description,
            role.role,
            permission.`name`,
            permission.permission,
            permission.uri
        FROM
            (permission, role)
        RIGHT JOIN perm_role ON permission.perm_id = perm_role.perm_id
        AND perm_role.role_id = role.roleid
        WHERE role.roleid=#{roleId} AND permission.`perm_id`!=6 ;
    </select>
  <select id="findPermissionByRoleId2" resultType="String" parameterType="java.lang.Integer">
        SELECT
            permission.`name`
        FROM
            (permission, role)
        RIGHT JOIN perm_role ON permission.perm_id = perm_role.perm_id
        AND perm_role.role_id = role.roleid
        WHERE role.roleid=#{roleId} AND permission.`perm_id`!=6 ;
    </select>
</mapper>